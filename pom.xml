<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--通过提供众多的起步依赖降低项目依赖的复杂度-->
    <modelVersion>4.0.0</modelVersion>
    <!--利用maven的依赖管理功能，继承很多常用库的依赖版本，声明依赖时就不用再去指定版本号，避免了依赖冲突-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.spb.wally</groupId>
    <artifactId>wally</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>wally-dao</module>
        <module>wally-manager</module>
        <module>wally-domain</module>
        <module>wally-service</module>
        <module>wally-web</module>
    </modules>
    <!--以下都是spring boot的起步依赖-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <alibaba.druid.version>1.1.10</alibaba.druid.version>
        <lombok.version>1.16.18</lombok.version>
        <mysql.version>5.1.47</mysql.version>
        <test.version>2.0.4.RELEASE</test.version>
        <sign.version>1.1.3-SNAPSHOT</sign.version>
        <redis.version>1.4.7.RELEASE</redis.version>
        <guava.version>18.0</guava.version>
        <xxl-job-version>2.0.0-SNAPSHOT</xxl-job-version>
    </properties>
    <dependencies>
        <!--*******************Spring Boot 起步依赖开始******************-->
        <!--起步依赖功能：在构建文件里指定这些功能，让构建过程自己搞明白我们需要什么东西。从而降低项目依赖的复杂度-->
        <!--起步依赖本身的版本号是由正在使用的SpringBoot的版本来决定的，而起步依赖则会决定他们引入的传递依赖的版本-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!--*******************起步依赖结束******************-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-redis</artifactId>
            <version>${redis.version}</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.spb.wally</groupId>
                <artifactId>wally-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.spb.wally</groupId>
                <artifactId>wally-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.spb.wally</groupId>
                <artifactId>wally-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.spb.wally</groupId>
                <artifactId>wally-manager</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${alibaba.druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wally.sign</groupId>
                <artifactId>sign</artifactId>
                <version>${sign.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--构建插件主要功能：把项目打包成一个可执行的超级JAR（Uber-JAR），包括把应用程序的 所有依赖打入JAR文件内，并为JAR添加一个描述文件，其中的内容能让你用java -jar来运行 应用程序。-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


</project>
